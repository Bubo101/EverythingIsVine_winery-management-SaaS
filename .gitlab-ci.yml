# CI START #

stages:
  - test
  - build
  - deploy

services:
  - postgres:14.2-bullseye

variables:
  DATABASE_URL: postgresql://winery:password@postgres/winery
  POSTGRES_MULTIPLE_DATABASES: winery, sales
  POSTGRES_PASSWORD: test-databases
  WAIT_HOSTS: postgres:5432


# # TEST 
lint-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 sales inventory

# BUILD
build-front-end-job:
  stage: build
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
  image: node:lts-bullseye
  variables:
    PUBLIC_URL: https://gitlab.com/beach-bums/everything-is-vine
    REACT_APP_API_HOST: https://everything-is-vine.herokuapp.com/
  script:
    - cd ghi
    - npm install
    - npm run build
#     # - echo ${REACT_APP_DJANGO_API}
  artifacts:
    paths:
      - ghi/build/

    # CI END #

## 1 DEPLOY THE UI TO GITLAB PAGES ## 
pages:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "end-cd"
  dependencies:
    - build-front-end-job
  script:
    - mv ghi/build public
  artifacts:
    paths:
      - public

## BUILD ##

service-build-job:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd winery_project
    - docker build -t ${CI_REGISTRY_IMAGE}/api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/api:latest ${CI_REGISTRY_IMAGE}/app:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/app:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/api:latest



## TRANSFER ##
heroku-transfer:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "end-cd"
  needs:
    - service-build-job
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/api:latest
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag $CI_REGISTRY_IMAGE/api:latest registry.heroku.com/$HEROKU_STAGING_APP/web:latest
    - docker push registry.heroku.com/$HEROKU_STAGING_APP/web:latest

## RELEASE ##
heroku-release:
  stage: deploy
  image: node:10.17-alpine
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "end-cd"
  needs:
    - heroku-transfer
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_STAGING_APP