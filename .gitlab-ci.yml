stages:
  - test 
  - build
  - deploy

services:
  - postgres:14.2-bullseye

variables:
  PUBLIC_URL: https://beach-bums.gitlab.io/everything-is-vine/
  POSTGRES_DB: test_db
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  POSTGRES_HOST_AUTH_METHOD: trust

  # DATABASE_URL: postgresql://postgres:test@postgres:5432/postgres
  # DATABASE_URL: postgres://rkicmfokzbtwzd:57a2191e583382ebeecca27f2448f8de500ef5b75d08bf8f08a265f1061cd9bf@ec2-52-205-61-230.compute-1.amazonaws.com:5432/defnpn8u6v5m5e

winery-unit-test-job:
  image: python:3-bullseye
  stage: test
  script: 
    - cd winery
    - pip install -r requirements.txt
    - export DATABASE_URL="postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB"
    - python manage.py migrate  # Migrate the database
    - python manage.py test  # Run the tests
  allow_failure: true
  
sales-unit-test-job:
  image: python:3-bullseye
  stage: test
  script: 
    - cd sales
    - pip install -r requirements.txt
    - export DATABASE_URL="postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres/$POSTGRES_DB"
    - python manage.py migrate  # Migrate the database
    - python manage.py test  # Run the tests
  allow_failure: true
  


lint-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 winery sales
  allow_failure: true
  

build-front-end-job:
  stage: build
  image: node:lts-bullseye
  variables:
    PUBLIC_URL: https://beach-bums.gitlab.io/everything-is-vine
  script:
    - cd ghi  # CHANGE THIS TO THE DIRECTORY THAT HAS package.json
    - npm install
    - npm run build
    - cp build/index.html build/404.html  # Make this a SPA
  
  
  artifacts:
    paths:
      - ghi/build/  # Save all of the files in the build path
  
pages:  # THIS STEP MUST BE NAME PAGES
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
     # THE FIRST PART OF THIS COMMAND MUST BE THE DIRECTORY
     # THAT YOU cd INTO TO BUILD IT PLUS THE build/ AT THE
     # END
    - mv ghi/build/ public
  artifacts:
    paths:
      - public

build-winery-api-image-job:  # RENAME THIS
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  needs:
    - build-front-end-job 
  services:
    - docker:20.10.16-dind
  script:
    # CHANGE THIS TO THE DIRECTORY THAT HAS YOUR Dockerfile
    - cd winery

    # EVERYWHERE IT SHOWS fastapi_api BELOW, CHANGE THOSE
    # TO A MORE MEANINGFUL SERVICE NAME (5 PLACES)
    - docker build -t ${CI_REGISTRY_IMAGE}/winery:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/winery:latest ${CI_REGISTRY_IMAGE}/winery:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/winery:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/winery:latest


deploy-winery-api-image-job:  # RENAME THIS
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "end-cd"
  stage: deploy
  image: docker:20.10.16
  needs:
    # CHANGE THIS TO THE JOB NAME FROM THE LAST STEP
    - build-winery-api-image-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}/winery:latest
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag ${CI_REGISTRY_IMAGE}/winery:latest registry.heroku.com/$HEROKU_INVENTORY_API_APP/web:latest
    - docker push registry.heroku.com/$HEROKU_INVENTORY_API_APP/web:latest

    # EVERYWHERE IT SHOWS fastapi_api BELOW, CHANGE THOSE
    # TO THE NAME YOU CHOSE FOR THE BUILD STEP (2 PLACES)

    # EVERYWHERE IT SHOWS HEROKU_SERVICE_APP BELOW, CHANGE
    # THOSE TO THE VARIABLE NAME YOU CREATED FOR THE CI/CD
    # SETTINGS (2 PLACES)

    # IF THIS IS FOR A BACKGROUND SERVICE LIKE A POLLER,
    # CHANGE /web TO /worker (2 PLACES)

release-winery-api-image-job:  # RENAME THIS
  stage: deploy
  image: node:10.17-alpine
  needs:
    # CHANGE THIS TO THE JOB NAME FROM THE LAST STEP
    - deploy-winery-api-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "end-cd"

  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    # EVERYWHERE IT SHOWS HEROKU_SERVICE_APP BELOW, CHANGE
    # THOSE TO THE VARIABLE NAME YOU CREATED FOR THE CI/CD
    # SETTINGS (1 PLACE)

    # IF THIS IS FOR A BACKGROUND SERVICE LIKE A POLLER,
    # CHANGE web TO worker (1 PLACE)
    - heroku container:release web --app $HEROKU_INVENTORY_API_APP



## SALES 

build-sales-api-image-job:  # RENAME THIS
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  needs:
    - build-front-end-job
  services:
    - docker:20.10.16-dind
  script:
    # CHANGE THIS TO THE DIRECTORY THAT HAS YOUR Dockerfile
    - cd sales

    # EVERYWHERE IT SHOWS fastapi_api BELOW, CHANGE THOSE
    # TO A MORE MEANINGFUL SERVICE NAME (5 PLACES)
    - docker build -t ${CI_REGISTRY_IMAGE}/sales:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/sales:latest ${CI_REGISTRY_IMAGE}/sales:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/sales:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/sales:latest


deploy-sales-api-image-job:  # RENAME THIS
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    # CHANGE THIS TO THE JOB NAME FROM THE LAST STEP
    - build-sales-api-image-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}/sales:latest
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag ${CI_REGISTRY_IMAGE}/sales:latest registry.heroku.com/$HEROKU_SALES_POLLER/worker:latest
    - docker push registry.heroku.com/$HEROKU_SALES_POLLER/worker:latest

    # EVERYWHERE IT SHOWS fastapi_api BELOW, CHANGE THOSE
    # TO THE NAME YOU CHOSE FOR THE BUILD STEP (2 PLACES)

    # EVERYWHERE IT SHOWS HEROKU_SERVICE_APP BELOW, CHANGE
    # THOSE TO THE VARIABLE NAME YOU CREATED FOR THE CI/CD
    # SETTINGS (2 PLACES)

    # IF THIS IS FOR A BACKGROUND SERVICE LIKE A POLLER,
    # CHANGE /web TO /worker (2 PLACES)

release-sales-api-image-job:  # RENAME THIS
  stage: deploy
  image: node:10.17-alpine
  needs:
    # CHANGE THIS TO THE JOB NAME FROM THE LAST STEP
    - deploy-sales-api-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    # EVERYWHERE IT SHOWS HEROKU_SERVICE_APP BELOW, CHANGE
    # THOSE TO THE VARIABLE NAME YOU CREATED FOR THE CI/CD
    # SETTINGS (1 PLACE)

    # IF THIS IS FOR A BACKGROUND SERVICE LIKE A POLLER,
    # CHANGE web TO worker (1 PLACE)
    - heroku container:release worker --app $HEROKU_SALES_POLLER
